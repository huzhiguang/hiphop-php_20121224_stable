// @generated by "php idl.php inc {input.idl.php} {output.inc}"

#if EXT_TYPE == 0
"ice_initialize", T(Object), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.ice-initialize.php )\n *\n * ice initialize\n *\n * @return     object  return a object of ice\n */", 
"icephp_defineproxy", T(Object), S(0), "classobj", T(Object), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.icephp-defineproxy.php\n * )\n *\n * IcePHP_defineProxy\n *\n * @classobj   object\n *\n * @return     object  return the object of proxy\n */", 
"icephp_declareclass", T(Object), S(0), "id", T(String), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.icephp-declareclass.php\n * )\n *\n * IcePHP_declareClass\n *\n * @id         string\n *\n * @return     object\n */", 
"icephp_defineexception", T(Object), S(0), "id", T(String), "N;", S(2), "null", S(0), "name", T(String), "N;", S(2), "null", S(0), "base", T(Variant), "N;", S(2), "null", S(0), "members", T(Variant), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.icephp-defineexception.php )\n *\n * IcePHP_defineException\n *\n * @id         string\n * @name       string\n * @base       mixed\n * @members    mixed\n *\n * @return     object  throw the exception\n */", 
"create_typeinfobyid", T(Variant), S(0), "id", T(Int32), "i:0;", S(4), "0", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.create-typeinfobyid.php\n * )\n *\n * creat const global var type\n *\n * @id         int\n *\n * @return     mixed\n */", 
"icephp_stringifyexception", T(String), S(0), "value", T(Object), "N;", S(2), "null", S(0), "target", T(Object), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.icephp-stringifyexception.php )\n *\n * icephp_stringifyexception\n *\n * @value      object\n * @target     object\n *\n * @return     string  throw the string vertify exception\n */", 
"icephp_stringify", T(String), S(0), "value", T(Object), "N;", S(2), "null", S(0), "target", T(Object), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.icephp-stringify.php )\n *\n * icephp_stringify\n *\n * @value      object\n * @target     object\n *\n * @return     string  vertify for the string\n */", 
"icephp_definesequence", T(Object), S(0), "id", T(String), "N;", S(2), "null", S(0), "elementtype", T(Variant), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.icephp-definesequence.php )\n *\n * IcePHP_defineSequence\n *\n * @id         string\n * @elementtype\n *             mixed\n *\n * @return     object  return the kind of sequence\n */", 
"icephp_defineclass", T(Object), S(0), "id", T(String), NULL, S(0), NULL, S(0), "name", T(String), NULL, S(0), NULL, S(0), "isabstract", T(Boolean), "b:1;", S(4), "true", S(0), "base", T(Object), "N;", S(2), "null", S(0), "interfaces", T(Variant), "N;", S(2), "null", S(0), "members", T(Variant), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.icephp-defineclass.php\n * )\n *\n * IcePHP_defineClass\n *\n * @id         string\n * @name       string\n * @isabstract bool\n * @base       object\n * @interfaces mixed\n * @members    mixed\n *\n * @return     object  return the object of dynamic class\n */", 
"icephp_defineoperation", T(Void), S(0), "classobj", T(Object), "N;", S(2), "null", S(0), "funname", T(String), "N;", S(2), "null", S(0), "mode", T(Int32), "N;", S(2), "null", S(0), "sendmode", T(Int32), "N;", S(2), "null", S(0), "inparams", T(Variant), "N;", S(2), "null", S(0), "outparams", T(Variant), "N;", S(2), "null", S(0), "returntype", T(Variant), "N;", S(2), "null", S(0), "exceptions", T(Variant), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.icephp-defineoperation.php )\n *\n * IcePHP_defineOperation\n *\n * @classobj   object\n * @funname    string\n * @mode       int\n * @sendmode   int\n * @inparams   mixed\n * @outparams  mixed\n * @returntype mixed\n * @exceptions mixed\n *\n * @return     mixed   return the object of dynamic class\n */", 
"ice_find", T(Object), S(0), "ice_name", T(String), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.ice-find.php )\n *\n *\n * @ice_name   string  return a ice object pass the paramter of ice_name\n *\n * @return     object\n */", 
"ice_register", T(Boolean), S(0), "ice_object", T(Object), NULL, S(0), NULL, S(0), "ice_name", T(String), "N;", S(2), "null", S(0), "expires", T(Int64), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.ice-register.php )\n *\n *\n * @ice_object object\n * @ice_name   string  return a ice object pass the paramter of ice_name\n * @expires    int\n *\n * @return     bool\n */", 

#elif EXT_TYPE == 1

#elif EXT_TYPE == 2
"ICE", "", NULL, "__construct", T(Void), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/ice.construct.php )\n *\n *\n */", S(16384),"stringToProxy", T(Object), S(0), "str", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/ice.stringtoproxy.php )\n *\n * create a proxy to server\n *\n * @str        string  set a proxy between server and client\n *\n * @return     object  return a ObjectPtr proxy.\n */", S(16384),NULL,NULL,NULL,
S(16384), "/**\n * ( excerpt from http://php.net/manual/en/class.ice.php )\n *\n * create a class of ICE\n *\n */", "Proxy", "", NULL, "__construct", T(Void), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/proxy.construct.php )\n *\n *\n */", S(16384),"__call", T(Variant), S(0), "name", T(Variant), NULL, S(0), NULL, S(0), "args", T(Variant), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/proxy.call.php )\n *\n *\n * @name       mixed\n * @args       mixed\n *\n * @return     mixed\n */", S(16384),"ice_oneway", T(Object), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/proxy.ice-oneway.php )\n *\n * set the transform is single direct\n *\n * @return     object  return a proxyObject\n */", S(16384),"ice_datagram", T(Object), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/proxy.ice-datagram.php )\n *\n * set the transform is datagram direct\n *\n * @return     object  return a proxyObject\n */", S(16384),"ice_isTwoway", T(Object), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/proxy.ice-istwoway.php )\n *\n * set the transform is bothway\n *\n * @return     object  return a bothway reslut is or not success\n */", S(16384),"ice_secure", T(Object), S(0), "secure", T(Boolean), "b:0;", S(4), "false", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/proxy.ice-secure.php )\n *\n * set the proxyObject's secure whether open\n *\n * @secure     bool    set the secure whether open\n *\n * @return     object  return a proxyObject with secure\n */", S(16384),"ice_timeout", T(Object), S(0), "lasttime", T(Int64), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/proxy.ice-timeout.php )\n *\n * set for proxy a timeout\n *\n * @lasttime   int     set the outtime\n *\n * @return     object  return the proxy of the last\n */", S(16384),"ice_context", T(Object), S(0), "ctx", T(Array), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/proxy.ice-context.php )\n *\n * get ice context\n *\n * @ctx        map     set the paramter of people want,the kind is key\n *                     value\n *\n * @return     object  return the object of proxy\n */", S(16384),"ice_checkedCast", T(Object), S(0), "classid", T(String), NULL, S(0), NULL, S(0), "facetOrCtx", T(Variant), "N;", S(2), "null", S(0), "ctx", T(Variant), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/proxy.ice-checkedcast.php )\n *\n * ice_checkedCast\n *\n * @classid    string\n * @facetOrCtx mixed\n * @ctx        mixed\n *\n * @return     object  return the object of proxy\n */", S(16384),"ice_uncheckedcast", T(Object), S(0), "classid", T(String), NULL, S(0), NULL, S(0), "facet", T(Variant), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/proxy.ice-uncheckedcast.php )\n *\n * ice_uncheckedCast\n *\n * @classid    string\n * @facet      mixed\n *\n * @return     object  return the object of proxy\n */", S(16384),NULL,NULL,NULL,
S(16384), "/**\n * ( excerpt from http://php.net/manual/en/class.proxy.php )\n *\n * a Proxy object\n *\n */", "IcePHP_class", "", NULL, "__construct", T(Void), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/icephp-class.construct.php )\n *\n *\n */", S(16384),NULL,NULL,NULL,
S(16384), "/**\n * ( excerpt from http://php.net/manual/en/class.icephp-class.php )\n *\n * a null class for proxy\n *\n */", "TypeInfo", "", NULL, "__construct", T(Void), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/typeinfo.construct.php )\n *\n *\n */", S(16384),NULL,NULL,NULL,
S(16384), "/**\n * ( excerpt from http://php.net/manual/en/class.typeinfo.php )\n *\n * type for member\n *\n */", 
#endif
